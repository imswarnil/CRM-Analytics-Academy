// 1. Variables & Theming
@import 'theme/variables';

// 2. Base Styles (Reset, Typography, etc.)
@import 'theme/base';

// 3. Core Layout Structure
@import 'theme/layout';
@import 'theme/home';

// 4. Page Sections
@import 'theme/header';
@import 'theme/hero';
@import 'theme/footer';
@import 'theme/modal';

// 5. Reusable Components
@import 'theme/components';
@import 'theme/adsense';


/* _sass/hero.scss */

// 1. Base Hero Banner Styling (from your existing CSS, slightly adapted)
// -----------------------------------------------------------------------------
.hero-banner--academy {
  background: var(--docs-hero-bg);
  border-bottom: 1px solid var(--docs-border);
  position: relative;
  padding: 4rem 1.5rem;
  overflow: hidden;

  .hero-content {
    position: relative;
    z-index: 2;
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 2rem;
  }

  .hero-text {
    max-width: 600px;
    .tableau-logo { font-size: 1rem; font-weight: 600; letter-spacing: 1px; color: var(--docs-hero-foreground); opacity: 0.9; margin-bottom: 1rem; }
    h1 { font-size: clamp(2.5rem, 6vw, 4rem); color: var(--docs-hero-foreground); font-weight: 800; line-height: 1.1; letter-spacing: -0.02em; }
    .hero__subtitle { margin-top: 1rem; color: var(--docs-hero-foreground); opacity: 0.85; }
    .hero-cta { margin-top: 1.5rem; }
    .hero-pills { margin-top: 1.5rem; }
  }
}

// 2. Animated SVG Character Styling & Responsiveness
// -----------------------------------------------------------------------------
.hero-character {
  flex-shrink: 0;
  width: 400px;
  height: 300px;
  
  // Hide on small screens where text needs full focus
  @media (max-width: 767px) {
    display: none;
  }
  // On medium screens, position it behind the text content
  @media (min-width: 768px) and (max-width: 1023px) {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 100%;
    opacity: 0.1;
    z-index: -1;
  }
  // On large screens, it sits nicely to the side
  @media (min-width: 1024px) {
    position: relative;
  }
}

// 3. SVG Element Styling (Using your theme's CSS variables)
// -----------------------------------------------------------------------------
#storyboard {
  .data-point {
    fill: var(--docs-hero-foreground);
    opacity: 0.6;
  }
  .core-processor .core-ring {
    fill: none;
    stroke: var(--docs-hero-accent);
    stroke-width: 1.5;
  }
  .core-processor .core-center {
    fill: var(--docs-hero-accent);
  }
  .charts {
    .chart-bar {
      fill: var(--docs-primary);
      transform-origin: bottom;
    }
    .chart-line {
      fill: none;
      stroke: var(--docs-hero-accent);
      stroke-width: 2.5;
      stroke-linecap: round;
      stroke-linejoin: round;
    }
    .line-dot {
      fill: var(--docs-primary);
      stroke: var(--docs-hero-bg);
      stroke-width: 3;
    }
  }
}

// 4. Animation Definitions (@keyframes)
// -----------------------------------------------------------------------------
@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-15px); }
}

@keyframes pulse {
  0%, 100% { transform: scale(1); opacity: 0.8; }
  50% { transform: scale(1.1); opacity: 1; }
}

@keyframes growBar {
  from { transform: scaleY(0); }
  to { transform: scaleY(1); }
}

@keyframes drawLine {
  to { stroke-dashoffset: 0; }
}

@keyframes popIn {
  from { r: 0; }
  to { r: 4; }
}

// 5. Animation Application & Sequencing
// -----------------------------------------------------------------------------
#storyboard {
  // Overall animation loop controller
  animation: storyboard-loop 10s infinite;

  // Stage 1: Data points float around
  .data-point {
    animation: float 6s ease-in-out infinite;
    // Stagger the animations for a natural look
    &.p2 { animation-duration: 5s; animation-delay: -2s; }
    &.p3 { animation-duration: 7s; animation-delay: -4s; }
    &.p4 { animation-duration: 5.5s; animation-delay: -1s; }
    &.p5 { animation-duration: 6.5s; animation-delay: -3s; }
    &.p6 { animation-duration: 7.5s; animation-delay: -5s; }
  }

  // Stage 2: Core processor fades in and pulses
  .core-processor {
    opacity: 0;
    animation: fadeIn 1s ease-out 1s forwards, 
               pulse 2s ease-in-out 2s infinite;
  }
  @keyframes fadeIn { to { opacity: 1; } }

  // Stage 3 & 4: Charts appear and animate
  .charts {
    opacity: 0;
    animation: fadeIn 0.5s ease-out 3s forwards;

    .bar-1 { height: 40px; animation: growBar 0.5s ease-out 3.5s forwards; }
    .bar-2 { height: 60px; animation: growBar 0.5s ease-out 3.7s forwards; }
    .bar-3 { height: 30px; animation: growBar 0.5s ease-out 3.9s forwards; }

    .chart-line {
      stroke-dasharray: 100;
      stroke-dashoffset: 100;
      animation: drawLine 1s ease-out 4.2s forwards;
    }
    .line-dot {
      animation: popIn 0.3s ease-out 5.2s forwards;
    }
  }
  
  // Reset for the loop
  @keyframes storyboard-loop {
    0%, 90%, 100% { opacity: 1; }
    // Fade out briefly before the next loop
    95% { opacity: 0; }
  }
}